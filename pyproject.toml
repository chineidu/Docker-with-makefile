[tool.pytest.ini_options]
addopts = "--cov=src"
testpaths = [
    "tests",
]
markers = [
    "training: tests that involve training",
]

# Pytest coverage
[tool.coverage.run]
omit = ["src/my_app/__init__.py"]

[tool.pylint.messages_control]
disable = [
    "consider-using-sys-exit",
    "cyclic-import",
    "duplicate-code",
    "missing-final-newline",
    "missing-timeout",
    "missing-module-docstring",
    "missing-class-docstring",
    "no-name-in-module",
    "no-value-for-parameter",
    "inconsistent-return-statements",
    "invalid-name",
    "import-error",
    "too-few-public-methods",
    "line-too-long",
    "logging-fstring-interpolation",
    "logging-too-many-args",
    "redefined-outer-name",
    "unsubscriptable-object",
    "unspecified-encoding",
    "ungrouped-imports",
    "redefined-builtin",
    "global-variable-not-assigned",
    "unused-argument",
    "useless-import-alias"
]

[tool.mypy]
mypy_path = ["decide"]
python_version = "3.10"
show_error_context = true
ignore_missing_imports = true
warn_incomplete_stub = false
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = false
warn_unused_configs = true

# Black formatting
[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
      .eggs         # exclude a few common directories in the
    | .git          # root of the project
    | .hg
    | .mypy_cache
    | .tox
    | venv
    | _build
    | buck-out
    | build
    | dist
  )/
'''

# iSort
[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
include_trailing_comma = true
virtual_env = "venv"
